国家列表:
  方法: GET
  地址: /countries
  返回: { Data:[[
   0: ChineseShortName
   1: EnglishShortName
   2: Alpha2Code
   3: Alpha3Code
   4: Numeric
   5: CallingCode
  ]] }

图片验证码:
  0. 数据:
    Captcha: {
      IdX:String
      DataURL:String // 验证码图片
      Length:Integer // 验证码长度(4-8位)
    }
  1. 检查:
    方法: GET
    地址: /captcha/get
    参数: Type:Integer // 1普通密码登录, 2发送短信或邮件验证码
    返回: { Data:Captcha }
    说明: Data=null则无需验证码
  2. 刷新:
    方法: GET
    地址: /captcha/refresh
    参数: IdX:String
    返回: { Data:Captcha }
  3. 验证:
    方法: GET
    地址: /captcha/validate
    参数: IdX:String, Code:String
    返回: {
      Pass:Boolean // 是否验证通过
      Data:Captcha // 验证不通过时返回新的验证码
    }
    说明: 验证通过后不要再次验证

短信或邮件验证码:
  0. 数据:
    Verify: {
      IdX:String
      Length:Integer // 验证码长度(4-8位)
    }
  1. 发送:
    方法: POST
    地址: /verify/send
    参数:
      Type:Integer    // 1登录, 2注册, 3重置密码, 4完善信息, 5账号设置
      Account:String  // 手机号码或邮箱地址
      CaptchaIdX:String, CaptchaCode:String
    返回: { Data:Verify }
    说明: 点击发送按钮时应获取图片验证码
    错误:
      AccountAlreadyExists 账号已存在(不能再注册)
      AccountNotExist 账号不存在(无法重置密码)
      SendFailed 发送失败

1. 登录:
  方法: POST
  地址: /user/login
  参数:
    Account:String  // 手机号码或邮箱地址
    Password:String // 不含空白字符(6-16位)
    CaptchaIdX:String, CaptchaCode:String // 如果需要图片验证码
  返回: { Data:Integer } // 用户Id
  错误:
    CaptchaIncorrect 图片验证码无效或不匹配
    LoginFailed 账号不存在或密码不匹配
    UserDisabled 用户已禁用

2. 快速登录(验证码登录):
  方法: POST
  地址: /user/login/fast
  参数:
    Account:String  // 手机号码
    VerifyIdX:String, VerifyCode:String // 短信验证码
  返回: { Data:Integer } // 用户Id
  说明: 账号不存在时自动注册
  错误:
    VerifyIncorrect 短信验证码无效或不匹配
    UserDisabled 用户已禁用

3. 退出:
  方法: POST
  地址: /user/logout
  返回: { Data:Boolean } // 成功或失败

4. 注册:
  方法: POST
  地址: /user/register
  参数:
    Account:String  // 手机号码或邮箱地址
    Password:String // 不含空白字符(6-16位)
    VerifyIdX:String, VerifyCode:String // 短信或邮件验证码
  返回: { Data:Integer } // 用户Id
  说明: 注册成功后已登录
  错误:
    VerifyIncorrect 短信或邮件验证码无效或不匹配
    AccountAlreadyExists 账号已存在

5. 重置密码:
  方法: POST
  地址: /user/reset/password
  参数:
    Account:String  // 手机号码或邮箱地址
    Password:String // 不含空白字符(6-16位)
    VerifyIdX:String, VerifyCode:String // 短信或邮件验证码
  返回: { Data:Integer } // 用户Id
  说明: 重置密码成功后未登录
  错误:
    VerifyIncorrect 短信或邮件验证码无效或不匹配
    AccountNotExist 账号不存在
    UserDisabled 用户已禁用

6. 获取需要完善的信息:
  方法: GET
  地址: /user/improve
  返回: { Data: {
    Id:Integer          // 用户Id
    Nickname:String     // 昵称
    Email:String        // 邮箱地址
    Mobile:String       // 手机号码
    HasPassword:Boolean // 是否已设置密码
  } }
7. 保存需要完善的信息:
  方法: POST
  地址: /user/improve
  参数:
    Email:String  // 邮箱地址
    EmailVerifyIdX:String, EmailVerifyCode:String // 邮件验证码
    Mobile:String  // 手机号码
    MobileVerifyIdX:String, MobileVerifyCode:String // 短信验证码
    Nickname:String // 昵称
    Password:String // 不含空白字符(6-16位)
  返回: { Data:Integer } // 完善字段数
  说明: 所有字段均可选, 已设置的和用户未填写的字段不要提交
  错误:
    NicknameAlreadyExists 昵称已存在
    EmailVerifyIncorrect 邮件验证码无效或不匹配
    EmailAlreadyExists 邮箱已存在
    MobileVerifyIncorrect 手机验证码无效或不匹配
    MobileAlreadyExists 手机已存在
8. 修改密码:
  方法: POST
  地址: /user/change/password
  参数:
    OldPassword:String // 当前密码
    NewPassword:String // 新密码
  返回: { Data:Integer } // 用户Id
